@model StudentEmploymentPortal.Areas.studentApplicationJ.Models.ApplicationDocument

@{
    ViewData["Title"] = "Add Application Document";
}

<h1>Add Application Document</h1>

<form method="post" enctype="multipart/form-data" asp-area="StudentApplicationJ" asp-controller="StudentApplication" asp-action="AddApplicationDocument">

    <table class="table" id="documentTable">
        <thead>
            <tr>
                <th>Document Name</th>
                <th>File</th>
                <th>Preview</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <div class="form-floating">
                        <input name="DocumentName" class="form-control document-name" aria-required="true" required />
                        <label class="col-form-label-sm" for="DocumentName">Enter document name</label>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <input type="file" name="files" class="form-control document-file" onchange="showFileDetails(this)" accept=".pdf, .doc, .docx" required />
                        <p class="text-muted file-details"></p>
                    </div>
                </td>
                <td>
                    <div class="preview-container"></div>
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="removeDocumentRow(this)">Delete</button>
                </td>
            </tr>
        </tbody>
    </table>

    <button type="button" class="btn btn-primary" onclick="addDocumentRow()">Add Document</button>

    <input type="hidden" name="ApplicationId" value="@ViewData["ApplicationId"]" />

    <button type="submit" class="btn btn-primary">Upload All</button>
    <button type="button" class="btn btn-danger close-button" onclick="navigateToView()">Cancel</button>
</form>

@section Scripts {
    <script>
        // Function to display file details and create a preview link
        function showFileDetails(input) {
            var fileInput = input;
            var fileDetailsDisplay = fileInput.parentNode.querySelector(".file-details");
            var previewContainer = fileInput.closest("tr").querySelector(".preview-container");

            if (fileInput.files.length > 0) {
                var file = fileInput.files[0];
                fileDetailsDisplay.textContent = "Selected File: " + file.name;

                var fileURL = URL.createObjectURL(file);
                var previewLink = document.createElement("a");
                previewLink.setAttribute("href", fileURL);
                previewLink.setAttribute("target", "_blank");
                previewLink.textContent = "Preview Document";

                if (previewContainer) {
                    previewContainer.innerHTML = "";
                    previewContainer.appendChild(previewLink);
                }
            } else {
                fileDetailsDisplay.textContent = "";
                if (previewContainer) {
                    previewContainer.innerHTML = "";
                }
            }
        }


        // Function to add a new document row
        function addDocumentRow() {
            var tableBody = document.getElementById("documentTable").getElementsByTagName("tbody")[0];

            var newRow = document.createElement("tr");

            var documentNameCell = document.createElement("td");
            var documentNameDiv = document.createElement("div");
            documentNameDiv.classList.add("form-floating");

            var documentNameInput = document.createElement("input");
            documentNameInput.setAttribute("name", "DocumentName");
            documentNameInput.setAttribute("class", "form-control document-name");
            documentNameInput.setAttribute("aria-required", "true");
            documentNameInput.setAttribute("required", "required");

            var documentNameLabel = document.createElement("label");
            documentNameLabel.setAttribute("class", "col-form-label-sm");
            documentNameLabel.setAttribute("for", "DocumentName");
            documentNameLabel.textContent = "Enter document name";

            documentNameDiv.appendChild(documentNameInput);
            documentNameDiv.appendChild(documentNameLabel);
            documentNameCell.appendChild(documentNameDiv);

            var fileCell = document.createElement("td");
            var fileInput = document.createElement("input");
            fileInput.setAttribute("type", "file");
            fileInput.setAttribute("name", "files");
            fileInput.setAttribute("class", "form-control document-file");
            fileInput.setAttribute("onchange", "showFileDetails(this)");
            fileInput.setAttribute("accept", ".pdf, .doc, .docx");
            fileInput.setAttribute("required", "required");
            var fileDetailsP = document.createElement("p");
            fileDetailsP.setAttribute("class", "text-muted file-details");
            fileCell.appendChild(fileInput);
            fileCell.appendChild(fileDetailsP);

            var previewCell = document.createElement("td");
            var previewContainer = document.createElement("div");
            previewContainer.setAttribute("class", "preview-container");
            previewCell.appendChild(previewContainer);

            var actionCell = document.createElement("td");
            var deleteButton = document.createElement("button");
            deleteButton.setAttribute("type", "button");
            deleteButton.setAttribute("class", "btn btn-danger");
            deleteButton.setAttribute("onclick", "removeDocumentRow(this)");
            deleteButton.textContent = "Delete";
            actionCell.appendChild(deleteButton);

            newRow.appendChild(documentNameCell);
            newRow.appendChild(fileCell);
            newRow.appendChild(previewCell);
            newRow.appendChild(actionCell);

            tableBody.appendChild(newRow);

            // Call showFileDetails for the newly added file input
            showFileDetails(fileInput);
        }


        // Function to remove a document row
        function removeDocumentRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        function navigateToView() {
            // Redirect the user to the view URL
            window.location.href = '@Url.Action("SearchAndApply", "Student", new { area = "StudentJ" })';
        }
    </script>
}
